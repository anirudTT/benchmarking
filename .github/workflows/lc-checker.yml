name: "l-checker workflow"

on:
  pull_request:
    branches:
      - "main"
    types:
      - opened
      - reopened
      - synchronize
      - assigned
      - review_requested

jobs:
  check-spdx-licenses:
    runs-on: ubuntu-20.04
    outputs:
      output: ${{ steps.check-licenses.outputs.output }}
      exit_code: ${{ steps.check-licenses.outputs.exit_code }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install infra dependencies
        run: python -m pip install git+https://github.com/espressif/check-copyright.git@master

      - name: Check SPDX licenses
        id: check-licenses
        run: |
          set +e
          output=$(python -m check_copyright --verbose --dry-run --replace --config ./check_copyright_config.yaml . | awk '/Some files are without a copyright note and a license header needs to be added:/,/^\s*$/')
          exit_code=$?
          echo "::set-output name=output::$output"
          echo "::set-output name=exit_code::$exit_code"
          if [ $exit_code -eq 1 ]; then
            echo "SPDX license check failed with exit code $exit_code ***************"
            exit 0  # Exit with code 0 to ensure the workflow continues
          fi

  print-then:
    needs: check-spdx-licenses
    runs-on: ubuntu-20.04
    steps:
      - name: Retrieve SPDX license check output
        run: echo "${{ needs.check-spdx-licenses.outputs.output }}"

  comment:
    needs: print-then
    runs-on: ubuntu-20.04
    steps:
      - name: Comment on pull request
        uses: actions/github-script@v6
        with:
          script: |
            const output = "${{ needs.check-spdx-licenses.outputs.output }}";
            const issueNumber = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            if (output) {
              const commentBody = `Checking SPDX licenses failed. Please check the files and add the missing SPDX licenses:\n\n${output}`;
              github.rest.issues.createComment({
                issue_number: issueNumber,
                owner: owner,
                repo: repo,
                body: commentBody
              });
            }