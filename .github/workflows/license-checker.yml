name: "License Checker"

on:
  pull_request:
    branches:
      - "main"
    types:
      - opened
      - reopened
      - synchronize
      - assigned
      - review_requested

jobs:
  check-license-headers-on-pr:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install Check-copyright
        run: python -m pip install git+https://github.com/espressif/check-copyright.git@master

      - name: Check SPDX licenses and comment on PR, then fail if issues found
        uses: actions/github-script@v6
        with:
          script: |
            const execSync = require('child_process').execSync;
            const command = `python -m check_copyright --verbose --dry-run --replace --config ./check_copyright_config.yaml . | awk '/Some files are without a copyright note and a license header needs to be added:/{flag=1; next} /Additional information about this hook and copyright headers may be found here:/{flag=0} flag'`;
            let output;
            try {
              output = execSync(command, { encoding: 'utf-8' }); // captures stdout
            } catch (error) {
              output = error.stdout; // captures stdout from the error, if command execution fails
            }
      
            // Remove ANSI color codes
            output = output.replace(/\u001b\[.*?m/g, '');
      
            const issueNumber = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
      
            if (output) {
              const commentBody = `We've identified an issue with SPDX license compliance in your submission. The automated SPDX license verification process was not successful for certain files. To proceed, please review the indicated files below and ensure that each one includes an appropriate SPDX license identifier.\n This step is crucial for maintaining compliance with licensing requirements.\n Thank you for your attention to this matter.\n\n${output}`;
              await github.rest.issues.createComment({
                issue_number: issueNumber,
                owner: owner,
                repo: repo,
                body: commentBody
              });
              core.setFailed("SPDX license issues found.");
            } else {
              console.log("No SPDX license issues found.");
            }