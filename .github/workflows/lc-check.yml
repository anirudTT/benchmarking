name: Check License Headers

on:
  pull_request:
    branches:
      - main

jobs:
  check_license:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Set up Deno
        uses: denolib/setup-deno@v2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          since_last_remote_commit: true

      - name: Check license headers for changed files
        run: |
          changedFiles=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr '\n' ' ')
          deno run --allow-read jsr:@kt3k/license-checker@3.2.11/main "$changedFiles"

      - name: Generate list of files without matching license headers
        id: unmatched_files
        run: |
          unmatched_files=$(deno run --allow-read jsr:@kt3k/license-checker@3.2.11/main "$changedFiles" | grep -v "Found")
          echo "::set-output name=unmatched_files::$unmatched_files"

      - name: Comment on PR with unmatched files
        if: steps.unmatched_files.outputs.unmatched_files != ''
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const unmatchedFiles = `${process.env.UNMATCHED_FILES}`;
            const filesArray = unmatchedFiles.split('\n').filter(Boolean);
            const message = "The following files do not have matching license headers:\n\n" + filesArray.join('\n');
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
